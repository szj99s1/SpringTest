<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">

	
	   <!-- 定义producer的参数 -->
   <bean id="producerProperties" class="java.util.HashMap">
       <constructor-arg>
           <map>
               <entry key="bootstrap.servers" value="127.0.0.1:9092" />
               <entry key="group.id" value="0" />
               <entry key="retries" value="1" />
               <entry key="batch.size" value="16384" />
               <entry key="linger.ms" value="1" />
               <entry key="buffer.memory" value="33554432" />
               <entry key="key.serializer"
               value="org.apache.kafka.common.serialization.StringSerializer" />
               <entry key="value.serializer"
               value="org.apache.kafka.common.serialization.StringSerializer" />
           </map>
       </constructor-arg>
   </bean>
    <!-- 创建kafkatemplate需要使用的producerfactory bean -->
   <bean id="producerFactory"
       class="org.springframework.kafka.core.DefaultKafkaProducerFactory">
       <constructor-arg>
           <ref bean="producerProperties" />
       </constructor-arg>
   </bean>

   <!-- 创建kafkatemplate bean，使用的时候，只需要注入这个bean，即可使用template的send消息方法 -->
   <bean id="kafkatemplate" class="org.springframework.kafka.core.KafkaTemplate">
       <constructor-arg ref="producerFactory" />
       <constructor-arg name="autoFlush" value="true" />
       <property name="defaultTopic" value="defaultTopic" />
       <property name="producerListener" ref="producerListener"/>
   </bean>
   
   <bean id="producerListener" class="spring.test.kafka.producer.KafkaProducerListener" /> 
   
   
   
   
       <!-- 定义consumer的参数 -->
     <bean id="consumerProperties" class="java.util.HashMap">
         <constructor-arg>
             <map>
                 <entry key="bootstrap.servers" value="127.0.0.1:9092"/>
                 <entry key="group.id" value="0"/>
                 <entry key="enable.auto.commit" value="false"/>
                 <entry key="auto.commit.interval.ms" value="1000"/>
                 <entry key="session.timeout.ms" value="15000"/>
                 <entry key="key.deserializer" value="org.apache.kafka.common.serialization.StringDeserializer"/>
                 <entry key="value.deserializer" value="org.apache.kafka.common.serialization.StringDeserializer"/>
             </map>
         </constructor-arg>
     </bean>
     
     <!-- 创建consumerFactory bean -->
     <bean id="consumerFactory" class="org.springframework.kafka.core.DefaultKafkaConsumerFactory">
         <constructor-arg>
             <ref bean="consumerProperties"/>
         </constructor-arg>
     </bean>
     
     <!-- 实际执行消息消费的类 -->
     <bean id="messageListernerConsumerService" class="spring.test.kafka.consumer.KafkaConsumerServer"/>
     
     <!-- 消费者容器配置信息 -->
     <bean id="containerProperties_trade" class="org.springframework.kafka.listener.config.ContainerProperties">
         <constructor-arg value="order_test_topic"/>
         <property name="messageListener" ref="messageListernerConsumerService"/>
     </bean>
     <bean id="containerProperties_other" class="org.springframework.kafka.listener.config.ContainerProperties">
         <constructor-arg value="other_test_topic"/>
         <property name="messageListener" ref="messageListernerConsumerService"/>
     </bean>
     
     <!-- 创建messageListenerContainer bean，使用的时候，只需要注入这个bean -->
     <bean id="messageListenerContainer_trade" class="org.springframework.kafka.listener.KafkaMessageListenerContainer" 
         init-method="doStart">
         <constructor-arg ref="consumerFactory"/>
         <constructor-arg ref="containerProperties_trade"/>
     </bean>
     
     <bean id="messageListenerContainer_other" class="org.springframework.kafka.listener.KafkaMessageListenerContainer" 
         init-method="doStart">
         <constructor-arg ref="consumerFactory"/>
         <constructor-arg ref="containerProperties_other"/>
     </bean>   
</beans>